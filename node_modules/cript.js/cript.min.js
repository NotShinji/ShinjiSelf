var key=void 0;function SetKey(e){key=e}function Encrypt(e,r){if(!key){const e=new Error('CriptJS: "Key" value is not defined.');return r?r(e):console.error(e)}if("string"!=typeof e){const t=new Error(`CriptJS: Text of type "${typeof e}" cannot be used for encryption`);return r?r(t):t}var t=new String,n=0;for(let r=0;r<e.length;r++)t+=String.fromCharCode(e.substr(r,1).charCodeAt(0)+key.substr(n,1).charCodeAt(0)),n+1<key.length?n++:key_controll=0;return r?r("",t):t}function Decrypt(e,r){if(!key){const e=new Error('CriptJS: "Key" value is not defined.');return r?r(e):console.error(e)}if("string"!=typeof e){const t=new Error(`CriptJS: Text of type "${typeof e}" cannot be used for encryption`);return r?r(t):console.error(t)}var t=new String,n=0;for(let r=0;r<e.length;r++)t+=String.fromCharCode(e.substr(r,1).charCodeAt(0)-key.substr(n,1).charCodeAt(0)),n+1<key.length?n++:key_controll=0;return r?r("",t):t}function GenNewRandomKey(e,r,t){const n="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";var o=new String;if(void 0===r.length){const e=new Error('CriptJS: The "TYPES" value can only be arrays or strings.');return t?t(e):console.error(e)}if(e<3&&(e=3),"object"==typeof r&&"letters"===r[0]&&1==r.length||"string"==typeof r&&"letters"===r)for(let r=0;r<e;r++){o+=n[Math.floor(Math.random()*n.length)]}else if("object"==typeof r&&"numbers"===r[0]&&1==r.length||"string"==typeof r&&"numbers"===r)for(let r=0;r<e;r++){o+="1234567890"[Math.floor(Math.random()*"1234567890".length)]}else if("object"==typeof r&&r.includes("numbers")&&r.includes("letters"))for(let r=0;r<e/2;r++){o+="1234567890"[Math.floor(Math.random()*"1234567890".length)],o+=n[Math.floor(Math.random()*n.length)]}var s="";for(let e=0;e<o.length;e++)s+="-";return t?t("",o):console.log(`${s}\n${o}\n${s}`)}module.exports={encrypt(e,r){if(!e){const e=new Error('CriptJS: "Text" value is not defined.');return r?r(e):console.error(e)}return Encrypt(e,r)},decrypt(e,r){if(!e){const e=new Error('CriptJS: "Text" value is not defined.');return r?r(e):console.error(e)}return Decrypt(e,r)},setKey(e,r){if(!e){const e=new Error('CriptJS: "Key" value is not defined.');return r?r(e):console.error(e)}if("string"!=typeof e){const t=new Error(`CriptJS: The "${typeof e}" type key cannot be used for cryptography`);return r?r(t):console.error(t)}SetKey(e)},genKey(e=30,r,t){if(isNaN(e)){const e=new Error("CriptJS: The length can only be number.");return t?t(e):console.error(e)}"object"!=typeof r&&"string"!=typeof r&&(r="letters"),GenNewRandomKey(e,r,t)}};